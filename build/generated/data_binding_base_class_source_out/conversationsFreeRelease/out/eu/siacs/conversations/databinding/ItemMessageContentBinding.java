// Generated by data binding compiler. Do not edit!
package eu.siacs.conversations.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import eu.siacs.conversations.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemMessageContentBinding extends ViewDataBinding {
  @NonNull
  public final RelativeLayout audioPlayer;

  @NonNull
  public final MaterialButton downloadButton;

  @NonNull
  public final TextView messageBody;

  @NonNull
  public final ImageView messageImage;

  @NonNull
  public final ImageButton playPause;

  @NonNull
  public final SeekBar progress;

  @NonNull
  public final TextView runtime;

  protected ItemMessageContentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      RelativeLayout audioPlayer, MaterialButton downloadButton, TextView messageBody,
      ImageView messageImage, ImageButton playPause, SeekBar progress, TextView runtime) {
    super(_bindingComponent, _root, _localFieldCount);
    this.audioPlayer = audioPlayer;
    this.downloadButton = downloadButton;
    this.messageBody = messageBody;
    this.messageImage = messageImage;
    this.playPause = playPause;
    this.progress = progress;
    this.runtime = runtime;
  }

  @NonNull
  public static ItemMessageContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_message_content, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemMessageContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemMessageContentBinding>inflateInternal(inflater, R.layout.item_message_content, root, attachToRoot, component);
  }

  @NonNull
  public static ItemMessageContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_message_content, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemMessageContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemMessageContentBinding>inflateInternal(inflater, R.layout.item_message_content, null, false, component);
  }

  public static ItemMessageContentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemMessageContentBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemMessageContentBinding)bind(component, view, R.layout.item_message_content);
  }
}
